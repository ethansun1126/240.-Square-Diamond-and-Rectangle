#include <stdio.h>
#include <stdbool.h>

int main(){
    int x;
    scanf("%d",&x);
    int a[8 * x];
    for (int i = 0; i < 8 * x; i++)
        scanf("%d", &(a[i]));
    for (int i = 0; i < 8 * x; i += 8)
    {
        #if 0
    
        if (((a[i] - a[i + 2]) * (a[i + 1] - a[i + 5]) - (a[i] - a[i + 4]) * (a[i + 1] - a[i + 3])) * ((a[i] - a[i + 2]) * (a[i + 1] - a[i + 7]) - (a[i] - a[i + 6]) * (a[i + 1] - a[i + 3])) < 0)
        {
            printf("cond1");
            int tempx = a[i + 2];
            a[i + 2] = a[i + 4];
            a[i + 4] = tempx;
            int tempy = a[i + 3];
            a[i + 3] = a[i + 5];
            a[i + 5] = tempy;
        }
        else if (((a[i] - a[i + 6]) * (a[i + 1] - a[i + 5]) - (a[i + 1] - a[i + 7]) * (a[i] - a[i + 4])) * ((a[i] - a[i + 6]) * (a[i + 1] - a[i + 3]) - (a[i + 1] - a[i + 7]) * (a[i] - a[i + 2])) < 0)
        {
            printf("cond2");
            int tempx = a[i + 6];
            a[i + 6] = a[i + 4];
            a[i + 4] = tempx;
            int tempy = a[i + 7];
            a[i + 7] = a[i + 5];
            a[i + 5] = tempy;
        }
        #endif

        bool ab = (((a[i] - a[i + 2]) * (a[i + 1] - a[i + 5]) - (a[i] - a[i + 4]) * (a[i + 1] - a[i + 3])) > 0);
        bool ac = (((a[i] - a[i + 2]) * (a[i + 1] - a[i + 7]) - (a[i] - a[i + 6]) * (a[i + 1] - a[i + 3])) > 0);
        bool cb = (((a[i] - a[i + 6]) * (a[i + 1] - a[i + 5]) - (a[i + 1] - a[i + 7]) * (a[i] - a[i + 4])) > 0);

        if (ab == true && ac == true && cb == true)
        {
            int tempx = a[i + 6];
            a[i + 6] = a[i + 4];
            a[i + 4] = tempx;
            int tempy = a[i + 7];
            a[i + 7] = a[i + 5];
            a[i + 5] = tempy;
        }
        // 一樣if (ab == true && ac == true && cb == false)
        if (ab == true && ac == false && cb == true)
        {
            int tempx = a[i + 2];
            a[i + 2] = a[i + 4];
            a[i + 4] = tempx;
            int tempy = a[i + 3];
            a[i + 3] = a[i + 5];
            a[i + 5] = tempy;
        }
        //if (ab == false && ac == true && cb == true)
        //if (ab == true && ac == false && cb == false)
        if (ab == false && ac == true && cb == false)
        {
            int tempx = a[i + 2];
            a[i + 2] = a[i + 4];
            a[i + 4] = tempx;
            int tempy = a[i + 3];
            a[i + 3] = a[i + 5];
            a[i + 5] = tempy;
        }
        //if (ab == false && ac == false && cb == true)
        if (ab == false && ac == false && cb == false)
        {
            int tempx = a[i + 6];
            a[i + 6] = a[i + 4];
            a[i + 4] = tempx;
            int tempy = a[i + 7];
            a[i + 7] = a[i + 5];
            a[i + 5] = tempy;
        }
        int aa = (a[i]     - a[i + 2]) * (a[i]     - a[i + 2]) + (a[i + 1] - a[i + 3]) * (a[i + 1] - a[i + 3]);
        int bb = (a[i + 2] - a[i + 4]) * (a[i + 2] - a[i + 4]) + (a[i + 3] - a[i + 5]) * (a[i + 3] - a[i + 5]);
        int cc = (a[i + 4] - a[i + 6]) * (a[i + 4] - a[i + 6]) + (a[i + 5] - a[i + 7]) * (a[i + 5] - a[i + 7]);
        int dd = (a[i + 6] - a[i])     * (a[i + 6] - a[i])     + (a[i + 7] - a[i + 1]) * (a[i + 7] - a[i + 1]);
        //協對角線 畢氏定理(? 此處無用
        int ee = (a[i]     - a[i + 4]) * (a[i]     - a[i + 4]) + (a[i + 1] - a[i + 5]) * (a[i + 1] - a[i + 5]);
        int ff = (a[i + 2] - a[i + 6]) * (a[i + 2] - a[i + 6]) + (a[i + 3] - a[i + 7]) * (a[i + 3] - a[i + 7]);
        //內積
        int e =  (a[i]     - a[i + 2]) * (a[i + 2] - a[i + 4]) + (a[i + 1] - a[i + 3]) * (a[i + 3] - a[i + 5]);
        int f =  (a[i + 2] - a[i + 4]) * (a[i + 4] - a[i + 6]) + (a[i + 3] - a[i + 5]) * (a[i + 5] - a[i + 7]);
        int g =  (a[i + 4] - a[i + 6]) * (a[i + 6] - a[i])     + (a[i + 5] - a[i + 7]) * (a[i + 7] - a[i + 1]);
        int h =  (a[i + 6] - a[i])     * (a[i]     - a[i + 2]) + (a[i + 7] - a[i + 1]) * (a[i + 1] - a[i + 3]);
        #if 0
        printf("%d\n", aa);
        printf("%d\n", bb);
        printf("%d\n", cc);
        printf("%d\n", dd);
        printf("%d\n", ee);
        printf("%d\n", ff);
        printf("%d\n", e);
        printf("%d\n", f);
        printf("%d\n", g);
        printf("%d\n", h);
        #endif
        bool length = ((aa == bb) && (aa == cc) && (aa == dd));
        bool ninety = ((aa + bb == ee) && (bb + cc == ff));
        bool ninety2 = (e == 0 && f == 0 && g == 0 && h == 0);
        if (length == true && ninety2 == true)
            printf("square\n");
        else if (length == true && ninety2 == false)
            printf("diamond\n");
        else if (length == false && ninety2 == true)
            printf("rectangle\n");
        else //(length == false && ninety == false)
            printf("other\n");
    }
    return 0;
}
